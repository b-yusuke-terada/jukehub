div#main.show
  = render partial: "/rooms/youtube_search"
  = render partial: "/rooms/error_modal"
  nav.navbar.navbar-dark.bg-primary
    span.bb
    a.navbar-brand = @room.screen_name
    button.navbar-toggler.hidden-md-up type="button" data-toggle="collapse" data-target="#collapse-bar" aria-expanded="true"
      i.fa.fa-bars
    div.container-fluid
      div#collapse-bar.collapse.navbar-toggleable-sm
        ul.nav.navbar-nav
        div.form-inline.pull-md-left
          input#search_query.form-control v-on:keydown.enter="aho" type="text" size='50%' placeholder=" 検索"
        div.profileIcon
          ul.nav.navbar-nav.nav-flex-icons
            li.nav-item.avatar.dropdown.active
              a.nav-link.dropdown-toggle.waves-effect.waves-light type="button" id="dropdown_menu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"
                img.img-circle src="#{current_user.image_url}" height='24px'
              div.dropdown-menu.dropdown-right.dropdown-warning aria-labelledby="dropdown_menu" data-dropdown-in="fadeIn" data-dropdown-out="fadeOut"
                = link_to 'マイページ', "#{ENV["APP_HOSTNAME"]}/users/#{current_user.id}", class: 'dropdown-item'
                div.dropdown-divider
                = link_to 'JukeHubの使い方', "#{ENV["APP_HOSTNAME"]}/how_to_use", class: 'dropdown-item', target: '_blank'
                = link_to '所属切替', "#{ENV["APP_HOSTNAME"]}/organizations", class: 'dropdown-item'


  div.container-fluid
    br
    div.row
      div.col-md-8
        iframe#player width="100%" height="400px" src="https://www.youtube.com/embed/ZWdMi2Cfp70" frameborder="0" allowfullscreen
        div#participants.card.card-block.nopad
          | <template v-for="participant in participants">
          |   <img class="horizontal" v-bind:src='participant.image_url' height="30px" width="30px" data-toggle="tooltip" data-placement="top" title="{{participant.name}}">
          |   <span class="iconR">
          |   </span>
          | </template>
        div.card.card-block
          div.row
            div.col-xs-2
              img#user_image src="/assets/images/user.png" height="90%" width="90%"
              span.iconH
            div.col-xs-8
              h4#now_playing_title.card-title
              a#now_playing_user
            div.col-xs-2
              span.likeCountArea
                span#like_count 0
                span いいね
              button.btn.btn-floating.btn-small.gold v-on:click="like"
                i.fa.fa-gratipay
      div.col-md-4
        div.card.card-block
          h5.urlTitle URL検索（YouTubeのみ）
          div.md-form
            input#url.form-control v-on:keydown.enter="add" value="#{@q}" type='text' placeholder="https://www.youtube.com/watch?v=ZWdMi2Cfp70"
        div.scrollArea
          | <template v-for="queue in queues">
          |   <div class='card' v-if="queue.state == 0">
          |     <div class='card-block'>
          |       <div class='row'>
          |         <div class='col-xs-2'>
          |           <img v-bind:src='queue.image_url' height='100%' width='100%'>
          |         </div>
          |         <div class='col-xs-10'>
          |           <div class='row'>
          |             <div class='col-xs-14'>
          |               <h5 class='card-title'>{{queue.title}}</h5>
          |             </div>
          |             <div class='col-xs-1'>
          |               <a id="{{queue.id}}" class="activator" v-on:click="stop"><i id="{{queue.id}}" class="fa fa-stop-circle-o"></i></a>
          |             </div>
          |           <p class='pull-xs-right'>{{queue.user.name}} / {{queue.duration_text}}</p>
          |           </div>
          |         </div>
          |       </div>
          |     </div>
          |   </div>
          |   <div class='card card-block card-success white-text' v-if="queue.state == 1">
          |     <div class='row'>
          |       <div class='col-xs-2'>
          |         <img v-bind:src='queue.image_url' height='100%' width='100%'>
          |       </div>
          |       <div class='col-xs-10'>
          |         <div class="row">
          |           <div class='col-xs-14'>
          |             <h5 class='card-title'>{{queue.title}}</h5>
          |           </div>
          |           <div class='col-xs-1'>
          |             <a id="{{queue.id}}" class="activator" v-on:click="stop"><i id="{{queue.id}}" class="fa fa-stop-circle-o"></i></a>
          |           </div>
          |           <p class='pull-xs-right'>{{queue.user.name}} / {{queue.duration_text}}</p>
          |         </div>
          |       </div>
          |     </div>
          |   </div>
          | </template>

javascript:
  var v = new Vue({
    el: '#main',
    data: {
      search_results: [],
      queues: [],
      comments: [],
      participants: [],
      now_playing: 0,
    },
    methods: {
      add: function(event) {
        var self = this;
        var url = $('#url').val();
        $.ajax({
          type: 'POST',
          url: '/api/rooms/#{@room.id}/queues',
          data: { url: url },
          success: function() {
            $('#url').val('');
            self.fetch_videos();
          },
          error: function(res, a) {
            $('#error_modal').modal('show');
          },
        });
      },
      fetch_videos: function() {
        var self = this;
        $.ajax({
          type: 'GET',
          url: '/api/rooms/#{@room.id}/queues',
          success: function (data, status, request) {
            self.queues = [];
            for (var i = 0; i < data.length; i++) {
              self.queues.push(data[i]);
            }
          },
        }).error(function (data, status, request) {})
      },
      get_video: function(callback) {
        $.ajax({
          type: 'GET',
          url: '/api/rooms/#{@room.id}/queues/playing',
          success: function(res) {
            if (res) {
              $('#now_playing_title').text(res.video.title);
              $('#now_playing_user').text('@' + res.user_name);
              if (res.user) {
                $('#now_playing_user').attr('href', '/users/' + res.user.id);
              } else {
                $('#now_playing_user').attr('href', '#');
              }
              $('#user_image').attr("src", res.image_url);
              callback({ id: res.video.provider_video_id, title: res.video.title, behind: res.behind, user_name: res.user_name, user: res.user });
            } else {
              callback(false);
            }
          },
        })
      },
      play: function(video) {
        var url = 'https://www.youtube.com/embed/' + video.id;
        $('#player').attr('src', url + '?autoplay=1&rel=0&showinfo=0&start=' + video.behind);
      },
      like: function() {
        var self = this;
        $.ajax({
          type: 'POST',
          url: '/api/rooms/#{@room.id}/reactions',
          data: { type: 'like' },
          success: function() {
            self.fetch_reactions();
          }
        });
      },
      fetch_reactions: function() {
        $.ajax({
          type: 'GET',
          url: '/api/rooms/#{@room.id}/reactions',
          success: function(res) {
            $('#like_count').text(res.like);
          }
        });
      },
      fetch_participants: function() {
        var self = this;
        $.ajax({
          type: 'GET',
          url: '/api/rooms/#{@room.id}/participants',
          success: function (data, status, request) {
            self.participants = [];
            for (var i = 0; i < data.length; i++) {
              self.participants.push(data[i]);
            }
          }
        });
      },
      stop: function(e, a, b) {
        var self = this;
        $.ajax({
          type: 'DELETE',
          url: '/api/rooms/#{@room.id}/queues/' + e.target.id,
          success: function(res) {
            self.fetch_videos();
          }
        });
      },
      watch: function() {
        var self = this;
        self.fetch_participants();
        this.fetch_reactions();
        this.get_video(function(video) {
          if (video && (self.now_playing != video.id)) {
            self.now_playing = video.id;
            self.play(video);
            var n = new Notification(video.title + "\n" + video.user_name);
            setTimeout(function() {
              n.close();
            }, 3 * 1000);
          }
          self.fetch_videos();
          self.fetch_comments();
          setTimeout(function() {
            self.watch();
          }, 10 * 1000);
        });
      },
      comment: function() {
        var self = this;
        var comment = $('#comment').val();
        $.ajax({
          type: 'POST',
          url: '/api/rooms/#{@room.id}/comments',
          data: { comment: comment },
          success: function() {
            $('#comment').val('');
            self.fetch_comments();
          }
        });
      },
      fetch_comments: function() {
        var self = this;
        $.ajax({
          type: 'GET',
          url: '/api/rooms/#{@room.id}/comments',
          success: function (data, status, request) {
            self.comments = [];
            for (var i = 0; i < data.length; i++) {
              self.comments.push(data[i]);
            }
          },
        });
      },
      aho: function() {
        var self = this;
        var query = $('#search_query').val();
        $.ajax({
          type: 'GET',
          url: '/api/search',
          data: { query: query },
          success: function (data, status, request) {
            self.search_results = [];
            for (var i = 0; i < data.result.length; i++) {
              self.search_results.push(data.result[i]);
            }
            $('#search_query_title').text(query);
            $('#search_result').modal();
          },
        });
      },
      add_video_from_result: function (event) {
        var self = this;
        var url = "https://www.youtube.com/watch?v=" + event.target.id;
        $.ajax({
          type: 'POST',
          url: '/api/rooms/#{@room.id}/queues',
          data: { url: url },
          success: function() {
            self.fetch_videos();
            $('#search_result').modal('hide');
          },
          error: function() {
            $('#error_modal').modal('show');
          },
        });
      },
    }
  })
  v.watch();
